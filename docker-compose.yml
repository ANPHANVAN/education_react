services:
  mongodb:
    image: mongo:7.0
    volumes:
      - mongo-data:/data/db
      - ./.database/mongo_backup/backup:/data/backup  # take backup files
    healthcheck:
      test: ["CMD-SHELL", "mongosh", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    # expose:
    #   - "27017"
    # ports:
    #   - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  express:
    build:
      context: ./express/app
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - MONGO_HOST=mongodb
      - MONGO_LINK=${MONGO_LINK}
      - HASH_SALT=${HASH_SALT}
      - JWT_SECRET=${JWT_SECRET}
      - FINAL_HOST=${FINAL_HOST}
      - GMAIL=${GMAIL}
      - GMAIL_PASSWORD=${GMAIL_PASSWORD}
    # expose:
    #   - "3000"
    volumes:
      - ./express/app:/app
      - /app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    # restart: unless-stopped
    container_name: education-express-1
    command: ["pm2-runtime","start", "src/app.js", "-i", "max"]

  nginx:
    container_name: education-nginx-1
    image: nginx:1.27
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/public:/public:ro
      - ./express/app/src/uploads:/uploads:ro
      - ./nginx/certbot/www:/var/www/certbot:ro
      - ./nginx/certbot/conf:/etc/letsencrypt:ro
    depends_on:
      express:
        condition: service_healthy
      # flask:
      #   condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s 
      retries: 5
    networks:
      - app-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  certbot:
    image: certbot/certbot
    container_name: education-certbot
    volumes:
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/log:/var/log/letsencrypt
    #entrypoint: /bin/sh -c "sleep 10"  # tạo container rồi bạn sẽ run lệnh sau
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  client:
    build:
      context: ./client/app
      dockerfile: client.Dockerfile
    # expose:
    #   - "9000"
    # ports:
    #   - "9000:9000"
    volumes:
      - ./client/app:/app
      - /client/app/node_modules
    depends_on:
      express:
        condition: service_healthy
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    # restart: unless-stopped
    container_name: education-client-1

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
